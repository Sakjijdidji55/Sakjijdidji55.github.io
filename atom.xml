<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>迷路的小朋友</title>
  
  <subtitle>吃好喝好, 玩好, 睡好</subtitle>
  <link href="https://sakjijdidji55.github.io/atom.xml" rel="self"/>
  
  <link href="https://sakjijdidji55.github.io/"/>
  <updated>2025-02-27T12:13:55.497Z</updated>
  <id>https://sakjijdidji55.github.io/</id>
  
  <author>
    <name>欣冻</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>pygame小游戏---小恐龙跳跃</title>
    <link href="https://sakjijdidji55.github.io/posts/d09342d0.html"/>
    <id>https://sakjijdidji55.github.io/posts/d09342d0.html</id>
    <published>2025-02-27T11:28:40.000Z</published>
    <updated>2025-02-27T12:13:55.497Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>学习pygame的第一个小游戏，挺适合做经典谷歌小恐龙跳跃</p><p>仓库地址：<a href="https://github.com/Sakjijdidji55/lost.git"></a></p><h3 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame <span class="comment"># 将pygame库导入到Python程序中</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line">SCREENWIDTH = <span class="number">800</span> <span class="comment"># 窗体宽度</span></span><br><span class="line">SCREENHEIGHT = <span class="number">260</span> <span class="comment"># 窗体高度</span></span><br><span class="line">pygame.init()</span><br><span class="line">window = pygame.display.set_mode((SCREENWIDTH, SCREENHEIGHT))</span><br><span class="line">window.fill((<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>))</span><br><span class="line">pygame.display.set_caption(<span class="string">&#x27;小恐龙&#x27;</span>)</span><br><span class="line">clock = pygame.time.Clock()</span><br><span class="line"></span><br><span class="line">font = pygame.font.Font(<span class="string">&quot;D:\\halloworld\\python\\pygame\\picture2\\字魂狂傲行书(商用需授权).ttf&quot;</span>,<span class="number">30</span>) <span class="comment"># 创建一个字体对象</span></span><br><span class="line">image_konglong = pygame.image.load(<span class="string">&#x27;D:\\halloworld\\python\\pygame\\图片\\u=3409403884,1794930412&amp;fm=253&amp;fmt=auto&amp;app=138&amp;f=PNG.jpg&#x27;</span>) <span class="comment"># 加载恐龙图片</span></span><br><span class="line">imgae_ditu = pygame.image.load(<span class="string">&#x27;D:\\halloworld\python\\pygame\\图片\\未标题-5.jpg&#x27;</span>)</span><br><span class="line">image_xianrenzhang = pygame.image.load(<span class="string">&#x27;D:\\halloworld\\python\\pygame\\图片\\仙人掌.jpg&#x27;</span>)</span><br><span class="line">image_yunduo = pygame.image.load(<span class="string">&#x27;D:\\halloworld\\python\\pygame\\图片\\云朵.jpg&#x27;</span>)</span><br><span class="line">image_gameover = pygame.image.load(<span class="string">&#x27;D:\\halloworld\\python\\pygame\\图片\\a3caae54704fd26c8227c51aca9fa7d248bd675f.jpg&#x27;</span>)</span><br><span class="line">use_image_konglong = pygame.transform.scale(image_konglong,(<span class="number">42</span>,<span class="number">42</span>))</span><br><span class="line">use_image_ditu = pygame.transform.scale(imgae_ditu,(<span class="number">1110</span>,<span class="number">375</span>)) </span><br><span class="line">use_image_xianrenzhang = pygame.transform.scale(image_xianrenzhang,(<span class="number">25</span>,<span class="number">47</span>))    </span><br><span class="line">use_image_yunduo = pygame.transform.scale(image_yunduo,(<span class="number">37</span>,<span class="number">26</span>))</span><br><span class="line">use_image_gameover = pygame.transform.scale(image_gameover,(<span class="number">350</span>,<span class="number">200</span>))</span><br><span class="line">music = pygame.mixer.Sound(<span class="string">&#x27;D:\halloworld\python\pygame\music\Lulleaux、Kid Princess - Empty Love.mp3&#x27;</span>)</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Konglong</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.x = <span class="number">0</span></span><br><span class="line">        <span class="variable language_">self</span>.y = <span class="number">90</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">konglongxianshi</span>(<span class="params">self</span>):</span><br><span class="line">        window.blit(use_image_konglong, (<span class="variable language_">self</span>.x, <span class="variable language_">self</span>.y))</span><br><span class="line">        pygame.display.update()</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">suaxin</span>(<span class="params">self</span>):</span><br><span class="line">        pygame.draw.rect(window,(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>),(<span class="variable language_">self</span>.x,<span class="variable language_">self</span>.y,<span class="number">42</span>,<span class="number">42</span>))</span><br><span class="line">        pygame.display.update()</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">move_up</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.y &lt;= <span class="number">90</span> <span class="keyword">and</span> <span class="variable language_">self</span>.y &gt; <span class="number">40</span>: <span class="comment"># 如果站在地上 </span></span><br><span class="line">            <span class="variable language_">self</span>.y = <span class="variable language_">self</span>.y - <span class="number">50</span> <span class="comment"># 以5个像素值向上移动</span></span><br><span class="line">        window.blit(use_image_konglong, (<span class="variable language_">self</span>.x, <span class="variable language_">self</span>.y))</span><br><span class="line">        pygame.display.update()</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">move_down</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.y &lt;=<span class="number">40</span> :</span><br><span class="line">            <span class="variable language_">self</span>.y = <span class="number">90</span></span><br><span class="line">        window.blit(use_image_konglong, (<span class="variable language_">self</span>.x, <span class="variable language_">self</span>.y))</span><br><span class="line">        pygame.display.update()</span><br><span class="line"></span><br><span class="line">yun_place_list = [<span class="number">555</span>,<span class="number">481</span>,<span class="number">564</span>,<span class="number">565</span>,<span class="number">532</span>,<span class="number">478</span>,<span class="number">255</span>,<span class="number">547</span>,<span class="number">775</span>,<span class="number">400</span>,<span class="number">500</span>,<span class="number">600</span>,<span class="number">700</span>,<span class="number">254</span>,<span class="number">845</span>,<span class="number">674</span>]</span><br><span class="line">score = <span class="number">0</span>              </span><br><span class="line">x_very = <span class="number">8</span></span><br><span class="line">yun_x = <span class="number">300</span></span><br><span class="line">map_x = <span class="number">0</span></span><br><span class="line">xainrenzhangn_x = <span class="number">400</span></span><br><span class="line">xainrenzhangn_x2 = <span class="number">700</span></span><br><span class="line">K = pygame.key.get_pressed()</span><br><span class="line">l = Konglong()</span><br><span class="line">pygame.display.flip()</span><br><span class="line">GREEN=(<span class="number">0</span>,<span class="number">200</span>,<span class="number">0</span>)</span><br><span class="line">RED=(<span class="number">200</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">SHALLOW_GREEN=(<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>)</span><br><span class="line">SHALLOW_RED=(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">jisuyouxi</span>(<span class="params">GREEN,RED</span>):</span><br><span class="line">    pygame.draw.rect(window, GREEN,(<span class="number">200</span>,<span class="number">180</span>,<span class="number">120</span>,<span class="number">40</span>))</span><br><span class="line">    pygame.draw.rect(window, RED,(<span class="number">500</span>,<span class="number">180</span>,<span class="number">120</span>,<span class="number">40</span>))</span><br><span class="line">    text1 = font.render(<span class="string">&#x27;重新开始&#x27;</span>,<span class="literal">True</span>,(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">    text2 = font.render(<span class="string">&#x27;退出游戏&#x27;</span>,<span class="literal">True</span>,(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">    window.blit(text1,(<span class="number">200</span>,<span class="number">180</span>))</span><br><span class="line">    window.blit(text2,(<span class="number">500</span>,<span class="number">180</span>))</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">jump</span>():</span><br><span class="line">    l.suaxin()</span><br><span class="line">    l.move_up()</span><br><span class="line">    time.sleep(<span class="number">0.5</span>)</span><br><span class="line">    l.suaxin()</span><br><span class="line">    l.move_down()  </span><br><span class="line">t_count = <span class="number">0</span></span><br><span class="line">state=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">music.play(-<span class="number">1</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    </span><br><span class="line">    clock.tick(<span class="number">30</span>)</span><br><span class="line">    text = font.render(<span class="string">&quot;SCORE: &quot;</span> + <span class="built_in">str</span>(score), <span class="literal">True</span>,(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)) <span class="comment"># 创建一个文本对象</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> t_count == <span class="number">0</span>:</span><br><span class="line">        score += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> xainrenzhangn_x &lt; -<span class="number">25</span>:</span><br><span class="line">            xainrenzhangn_x = xainrenzhangn_x2 + random.randint(<span class="number">200</span>,<span class="number">300</span>)</span><br><span class="line">        <span class="keyword">if</span> xainrenzhangn_x2 &lt; -<span class="number">25</span>:</span><br><span class="line">                xainrenzhangn_x2 = xainrenzhangn_x + random.randint(<span class="number">200</span>,<span class="number">300</span>)        </span><br><span class="line">        <span class="keyword">if</span> yun_x &lt; -<span class="number">15</span>:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(random.randint(<span class="number">0</span>,<span class="built_in">len</span>(yun_place_list)-<span class="number">1</span>)):</span><br><span class="line">                yun_x = yun_place_list[i]</span><br><span class="line">        window.blit(use_image_ditu,(map_x,-<span class="number">110</span>))</span><br><span class="line">        window.blit(use_image_ditu,(map_x+<span class="number">1110</span>,-<span class="number">110</span>))</span><br><span class="line">        window.blit(use_image_xianrenzhang,(xainrenzhangn_x,<span class="number">86</span>))</span><br><span class="line">        window.blit(use_image_xianrenzhang,(xainrenzhangn_x2,<span class="number">86</span>))</span><br><span class="line">        window.blit(text,(<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">        window.blit(use_image_yunduo,(yun_x,<span class="number">0</span>)) </span><br><span class="line">        l.konglongxianshi()</span><br><span class="line">        map_x -= x_very</span><br><span class="line">        xainrenzhangn_x -= x_very</span><br><span class="line">        xainrenzhangn_x2 -= x_very</span><br><span class="line">        yun_x -= x_very</span><br><span class="line">        x_very += <span class="number">0.0025</span></span><br><span class="line">        <span class="keyword">if</span> map_x &lt; -<span class="number">500</span>:</span><br><span class="line">            map_x = <span class="number">0</span></span><br><span class="line">        pygame.display.update()</span><br><span class="line">    <span class="keyword">if</span>  xainrenzhangn_x &lt;= <span class="number">35</span> <span class="keyword">and</span> l.y == <span class="number">90</span> <span class="keyword">and</span> xainrenzhangn_x &gt;= -<span class="number">25</span>:</span><br><span class="line">        music.stop()</span><br><span class="line">        t_count = <span class="number">1</span> </span><br><span class="line">        <span class="keyword">if</span> (state==<span class="number">0</span>):</span><br><span class="line">            window.blit(use_image_gameover,(<span class="number">225</span>,<span class="number">30</span>))</span><br><span class="line">            jisuyouxi(GREEN,RED)</span><br><span class="line">            pygame.display.update()</span><br><span class="line">    <span class="keyword">if</span> xainrenzhangn_x2 &lt;= <span class="number">35</span> <span class="keyword">and</span> l.y == <span class="number">90</span> <span class="keyword">and</span> xainrenzhangn_x2 &gt;= -<span class="number">25</span>:</span><br><span class="line">        t_count = <span class="number">1</span></span><br><span class="line">        music.stop()</span><br><span class="line">        <span class="keyword">if</span>(state==<span class="number">0</span>):</span><br><span class="line">            window.blit(use_image_gameover,(<span class="number">225</span>,<span class="number">30</span>))</span><br><span class="line">            jisuyouxi(GREEN,RED)</span><br><span class="line">            pygame.display.update()</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">        <span class="keyword">if</span> event.<span class="built_in">type</span> == pygame.QUIT:</span><br><span class="line">            pygame.quit()</span><br><span class="line">            exit() </span><br><span class="line">        <span class="keyword">elif</span> event.<span class="built_in">type</span> == pygame.KEYDOWN:</span><br><span class="line">            <span class="keyword">if</span> event.key == pygame.K_SPACE <span class="keyword">or</span> event.key == pygame.K_UP:</span><br><span class="line">                t1 = threading.Thread(target=jump)</span><br><span class="line">                t1.start()</span><br><span class="line">            <span class="keyword">if</span> event.key == pygame.K_DOWN:</span><br><span class="line">                l.move_down()</span><br><span class="line">                l.suaxin()</span><br><span class="line">                </span><br><span class="line">            <span class="keyword">if</span> event.key == pygame.K_RETURN <span class="keyword">and</span> t_count == <span class="number">1</span>:</span><br><span class="line">                music.play(-<span class="number">1</span>)</span><br><span class="line">                t_count = <span class="number">0</span></span><br><span class="line">                score = <span class="number">0</span>              </span><br><span class="line">                yun_x = <span class="number">300</span></span><br><span class="line">                x_very = <span class="number">8</span></span><br><span class="line">                map_x = <span class="number">0</span></span><br><span class="line">                xainrenzhangn_x = <span class="number">400</span></span><br><span class="line">                xainrenzhangn_x2 = <span class="number">600</span></span><br><span class="line">                state=<span class="number">0</span></span><br><span class="line">            </span><br><span class="line">        <span class="keyword">elif</span> event.<span class="built_in">type</span> == pygame.MOUSEMOTION:</span><br><span class="line">            x,y = event.pos</span><br><span class="line">            <span class="keyword">if</span> t_count == <span class="number">1</span> <span class="keyword">and</span> <span class="number">200</span> &lt;= x &lt;= <span class="number">320</span> <span class="keyword">and</span> <span class="number">180</span> &lt;= y &lt;= <span class="number">220</span>:</span><br><span class="line">                jisuyouxi(GREEN=SHALLOW_GREEN,RED=RED)</span><br><span class="line">                pygame.display.update()</span><br><span class="line">                state=<span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> t_count == <span class="number">1</span> <span class="keyword">and</span> <span class="number">500</span> &lt;= x &lt;= <span class="number">620</span> <span class="keyword">and</span> <span class="number">180</span> &lt;= y &lt;= <span class="number">220</span>:</span><br><span class="line">                jisuyouxi(GREEN=GREEN,RED=SHALLOW_RED)</span><br><span class="line">                pygame.display.update() </span><br><span class="line">                state=<span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                state=<span class="number">0</span></span><br><span class="line">                    </span><br><span class="line">        <span class="keyword">elif</span> event.<span class="built_in">type</span> == pygame.MOUSEBUTTONUP:</span><br><span class="line">            x,y = event.pos</span><br><span class="line">            <span class="keyword">if</span> t_count == <span class="number">1</span> <span class="keyword">and</span> <span class="number">200</span> &lt;= x &lt;= <span class="number">320</span> <span class="keyword">and</span> <span class="number">180</span> &lt;= y &lt;= <span class="number">220</span>:</span><br><span class="line">                music.play(-<span class="number">1</span>)</span><br><span class="line">                t_count = <span class="number">0</span></span><br><span class="line">                score = <span class="number">0</span>              </span><br><span class="line">                yun_x = <span class="number">300</span></span><br><span class="line">                x_very = <span class="number">10</span></span><br><span class="line">                map_x = <span class="number">0</span></span><br><span class="line">                xainrenzhangn_x = <span class="number">400</span></span><br><span class="line">                xainrenzhangn_x2 = <span class="number">600</span></span><br><span class="line">                state=<span class="number">0</span></span><br><span class="line">            <span class="keyword">if</span> t_count == <span class="number">1</span> <span class="keyword">and</span> <span class="number">500</span> &lt;= x &lt;= <span class="number">620</span> <span class="keyword">and</span> <span class="number">180</span> &lt;= y &lt;= <span class="number">220</span>:</span><br><span class="line">                pygame.quit()</span><br><span class="line">                exit()</span><br></pre></td></tr></table></figure><h4 id="代码解释"><a href="#代码解释" class="headerlink" title="代码解释"></a>代码解释</h4><h5 id="1-导入pygame库"><a href="#1-导入pygame库" class="headerlink" title="1. 导入pygame库"></a>1. 导入pygame库</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pygame <span class="comment"># 将pygame库导入到Python程序中</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> threading</span><br></pre></td></tr></table></figure><h5 id="2-初始化pygame"><a href="#2-初始化pygame" class="headerlink" title="2. 初始化pygame"></a>2. 初始化pygame</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pygame.init()</span><br></pre></td></tr></table></figure><h5 id="3-设置窗口大小"><a href="#3-设置窗口大小" class="headerlink" title="3. 设置窗口大小"></a>3. 设置窗口大小</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">window = pygame.display.set_mode((<span class="number">1110</span>, <span class="number">200</span>))</span><br></pre></td></tr></table></figure><h5 id="4-加载图片"><a href="#4-加载图片" class="headerlink" title="4. 加载图片"></a>4. 加载图片</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">use_image_ditu = pygame.image.load(<span class="string">&quot;&quot;</span>)</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br></pre></td></tr></table></figure><h5 id="5-加载音乐"><a href="#5-加载音乐" class="headerlink" title="5. 加载音乐"></a>5. 加载音乐</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">music = pygame.mixer.music.load(<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><h5 id="6-设置窗口标题"><a href="#6-设置窗口标题" class="headerlink" title="6. 设置窗口标题"></a>6. 设置窗口标题</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pygame.display.set_caption(<span class="string">&quot;小恐龙跳跃&quot;</span>)</span><br></pre></td></tr></table></figure><h5 id="7-创建恐龙类"><a href="#7-创建恐龙类" class="headerlink" title="7. 创建恐龙类"></a>7. 创建恐龙类</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Konglong</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.x = <span class="number">0</span></span><br><span class="line">        <span class="variable language_">self</span>.y = <span class="number">90</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">konglongxianshi</span>(<span class="params">self</span>):</span><br><span class="line">        window.blit(use_image_konglong, (<span class="variable language_">self</span>.x, <span class="variable language_">self</span>.y))</span><br><span class="line">        pygame.display.update()</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">suaxin</span>(<span class="params">self</span>):</span><br><span class="line">        pygame.draw.rect(window,(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>),(<span class="variable language_">self</span>.x,<span class="variable language_">self</span>.y,<span class="number">42</span>,<span class="number">42</span>))</span><br><span class="line">        pygame.display.update()</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">move_up</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.y &lt;= <span class="number">90</span> <span class="keyword">and</span> <span class="variable language_">self</span>.y &gt; <span class="number">40</span>: <span class="comment"># 如果站在地上 </span></span><br><span class="line">            <span class="variable language_">self</span>.y = <span class="variable language_">self</span>.y - <span class="number">50</span> <span class="comment"># 以5个像素值向上移动</span></span><br><span class="line">        window.blit(use_image_konglong, (<span class="variable language_">self</span>.x, <span class="variable language_">self</span>.y))</span><br><span class="line">        pygame.display.update()</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">move_down</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.y &lt;=<span class="number">40</span> :</span><br><span class="line">            <span class="variable language_">self</span>.y = <span class="number">90</span></span><br><span class="line">        window.blit(use_image_konglong, (<span class="variable language_">self</span>.x, <span class="variable language_">self</span>.y))</span><br><span class="line">        pygame.display.update()</span><br></pre></td></tr></table></figure><h5 id="8-基本变量"><a href="#8-基本变量" class="headerlink" title="8. 基本变量"></a>8. 基本变量</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">yun_place_list = [<span class="number">555</span>,<span class="number">481</span>,<span class="number">564</span>,<span class="number">565</span>,<span class="number">532</span>,<span class="number">478</span>,<span class="number">255</span>,<span class="number">547</span>,<span class="number">775</span>,<span class="number">400</span>,<span class="number">500</span>,<span class="number">600</span>,<span class="number">700</span>,<span class="number">254</span>,<span class="number">845</span>,<span class="number">674</span>]</span><br><span class="line">score = <span class="number">0</span>              </span><br><span class="line">x_very = <span class="number">8</span></span><br><span class="line">yun_x = <span class="number">300</span></span><br><span class="line">map_x = <span class="number">0</span></span><br><span class="line">xainrenzhangn_x = <span class="number">400</span></span><br><span class="line">xainrenzhangn_x2 = <span class="number">700</span></span><br><span class="line">K = pygame.key.get_pressed()</span><br><span class="line">l = Konglong()</span><br><span class="line">pygame.display.flip()</span><br><span class="line">GREEN=(<span class="number">0</span>,<span class="number">200</span>,<span class="number">0</span>)</span><br><span class="line">RED=(<span class="number">200</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">SHALLOW_GREEN=(<span class="number">0</span>,<span class="number">255</span>,<span class="number">0</span>)</span><br><span class="line">SHALLOW_RED=(<span class="number">255</span>,<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">jisuyouxi</span>(<span class="params">GREEN,RED</span>):</span><br><span class="line">    pygame.draw.rect(window, GREEN,(<span class="number">200</span>,<span class="number">180</span>,<span class="number">120</span>,<span class="number">40</span>))</span><br><span class="line">    pygame.draw.rect(window, RED,(<span class="number">500</span>,<span class="number">180</span>,<span class="number">120</span>,<span class="number">40</span>))</span><br><span class="line">    text1 = font.render(<span class="string">&#x27;重新开始&#x27;</span>,<span class="literal">True</span>,(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">    text2 = font.render(<span class="string">&#x27;退出游戏&#x27;</span>,<span class="literal">True</span>,(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">    window.blit(text1,(<span class="number">200</span>,<span class="number">180</span>))</span><br><span class="line">    window.blit(text2,(<span class="number">500</span>,<span class="number">180</span>))</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">jump</span>():</span><br><span class="line">    l.suaxin()</span><br><span class="line">    l.move_up()</span><br><span class="line">    time.sleep(<span class="number">0.5</span>)</span><br><span class="line">    l.suaxin()</span><br><span class="line">    l.move_down()  </span><br><span class="line">t_count = <span class="number">0</span></span><br><span class="line">state=<span class="number">0</span></span><br><span class="line"></span><br><span class="line">music.play(-<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h5 id="9-游戏循环"><a href="#9-游戏循环" class="headerlink" title="9. 游戏循环"></a>9. 游戏循环</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    </span><br><span class="line">    clock.tick(<span class="number">30</span>)</span><br><span class="line">    text = font.render(<span class="string">&quot;SCORE: &quot;</span> + <span class="built_in">str</span>(score), <span class="literal">True</span>,(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)) <span class="comment"># 创建一个文本对象</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> t_count == <span class="number">0</span>:</span><br><span class="line">        score += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> xainrenzhangn_x &lt; -<span class="number">25</span>:</span><br><span class="line">            xainrenzhangn_x = xainrenzhangn_x2 + random.randint(<span class="number">200</span>,<span class="number">300</span>)</span><br><span class="line">        <span class="keyword">if</span> xainrenzhangn_x2 &lt; -<span class="number">25</span>:</span><br><span class="line">                xainrenzhangn_x2 = xainrenzhangn_x + random.randint(<span class="number">200</span>,<span class="number">300</span>)        </span><br><span class="line">        <span class="keyword">if</span> yun_x &lt; -<span class="number">15</span>:</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(random.randint(<span class="number">0</span>,<span class="built_in">len</span>(yun_place_list)-<span class="number">1</span>)):</span><br><span class="line">                yun_x = yun_place_list[i]</span><br><span class="line">        window.blit(use_image_ditu,(map_x,-<span class="number">110</span>))</span><br><span class="line">        window.blit(use_image_ditu,(map_x+<span class="number">1110</span>,-<span class="number">110</span>))</span><br><span class="line">        window.blit(use_image_xianrenzhang,(xainrenzhangn_x,<span class="number">86</span>))</span><br><span class="line">        window.blit(use_image_xianrenzhang,(xainrenzhangn_x2,<span class="number">86</span>))</span><br><span class="line">        window.blit(text,(<span class="number">0</span>,<span class="number">0</span>))</span><br><span class="line">        window.blit(use_image_yunduo,(yun_x,<span class="number">0</span>)) </span><br><span class="line">        l.konglongxianshi()</span><br><span class="line">        map_x -= x_very</span><br><span class="line">        xainrenzhangn_x -= x_very</span><br><span class="line">        xainrenzhangn_x2 -= x_very</span><br><span class="line">        yun_x -= x_very</span><br><span class="line">        x_very += <span class="number">0.0025</span></span><br><span class="line">        <span class="keyword">if</span> map_x &lt; -<span class="number">500</span>:</span><br><span class="line">            map_x = <span class="number">0</span></span><br><span class="line">        pygame.display.update()</span><br><span class="line">    <span class="keyword">if</span>  xainrenzhangn_x &lt;= <span class="number">35</span> <span class="keyword">and</span> l.y == <span class="number">90</span> <span class="keyword">and</span> xainrenzhangn_x &gt;= -<span class="number">25</span>:</span><br><span class="line">        music.stop()</span><br><span class="line">        t_count = <span class="number">1</span> </span><br><span class="line">        <span class="keyword">if</span> (state==<span class="number">0</span>):</span><br><span class="line">            window.blit(use_image_gameover,(<span class="number">225</span>,<span class="number">30</span>))</span><br><span class="line">            jisuyouxi(GREEN,RED)</span><br><span class="line">            pygame.display.update()</span><br><span class="line">    <span class="keyword">if</span> xainrenzhangn_x2 &lt;= <span class="number">35</span> <span class="keyword">and</span> l.y == <span class="number">90</span> <span class="keyword">and</span> xainrenzhangn_x2 &gt;= -<span class="number">25</span>:</span><br><span class="line">        t_count = <span class="number">1</span></span><br><span class="line">        music.stop()</span><br><span class="line">        <span class="keyword">if</span>(state==<span class="number">0</span>):</span><br><span class="line">            window.blit(use_image_gameover,(<span class="number">225</span>,<span class="number">30</span>))</span><br><span class="line">            jisuyouxi(GREEN,RED)</span><br><span class="line">            pygame.display.update()</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">        <span class="keyword">if</span> event.<span class="built_in">type</span> == pygame.QUIT:</span><br><span class="line">            pygame.quit()</span><br><span class="line">            exit() </span><br><span class="line">        <span class="keyword">elif</span> event.<span class="built_in">type</span> == pygame.KEYDOWN:</span><br><span class="line">            <span class="keyword">if</span> event.key == pygame.K_SPACE <span class="keyword">or</span> event.key == pygame.K_UP:</span><br><span class="line">                t1 = threading.Thread(target=jump)</span><br><span class="line">                t1.start()</span><br><span class="line">            <span class="keyword">if</span> event.key == pygame.K_DOWN:</span><br><span class="line">                l.move_down()</span><br><span class="line">                l.suaxin()</span><br><span class="line">                </span><br><span class="line">            <span class="keyword">if</span> event.key == pygame.K_RETURN <span class="keyword">and</span> t_count == <span class="number">1</span>:</span><br><span class="line">                music.play(-<span class="number">1</span>)</span><br><span class="line">                t_count = <span class="number">0</span></span><br><span class="line">                score = <span class="number">0</span>              </span><br><span class="line">                yun_x = <span class="number">300</span></span><br><span class="line">                x_very = <span class="number">8</span></span><br><span class="line">                map_x = <span class="number">0</span></span><br><span class="line">                xainrenzhangn_x = <span class="number">400</span></span><br><span class="line">                xainrenzhangn_x2 = <span class="number">600</span></span><br><span class="line">                state=<span class="number">0</span></span><br><span class="line">            </span><br><span class="line">        <span class="keyword">elif</span> event.<span class="built_in">type</span> == pygame.MOUSEMOTION:</span><br><span class="line">            x,y = event.pos</span><br><span class="line">            <span class="keyword">if</span> t_count == <span class="number">1</span> <span class="keyword">and</span> <span class="number">200</span> &lt;= x &lt;= <span class="number">320</span> <span class="keyword">and</span> <span class="number">180</span> &lt;= y &lt;= <span class="number">220</span>:</span><br><span class="line">                jisuyouxi(GREEN=SHALLOW_GREEN,RED=RED)</span><br><span class="line">                pygame.display.update()</span><br><span class="line">                state=<span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> t_count == <span class="number">1</span> <span class="keyword">and</span> <span class="number">500</span> &lt;= x &lt;= <span class="number">620</span> <span class="keyword">and</span> <span class="number">180</span> &lt;= y &lt;= <span class="number">220</span>:</span><br><span class="line">                jisuyouxi(GREEN=GREEN,RED=SHALLOW_RED)</span><br><span class="line">                pygame.display.update() </span><br><span class="line">                state=<span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                state=<span class="number">0</span></span><br><span class="line">                    </span><br><span class="line">        <span class="keyword">elif</span> event.<span class="built_in">type</span> == pygame.MOUSEBUTTONUP:</span><br><span class="line">            x,y = event.pos</span><br><span class="line">            <span class="keyword">if</span> t_count == <span class="number">1</span> <span class="keyword">and</span> <span class="number">200</span> &lt;= x &lt;= <span class="number">320</span> <span class="keyword">and</span> <span class="number">180</span> &lt;= y &lt;= <span class="number">220</span>:</span><br><span class="line">                music.play(-<span class="number">1</span>)</span><br><span class="line">                t_count = <span class="number">0</span></span><br><span class="line">                score = <span class="number">0</span>              </span><br><span class="line">                yun_x = <span class="number">300</span></span><br><span class="line">                x_very = <span class="number">10</span></span><br><span class="line">                map_x = <span class="number">0</span></span><br><span class="line">                xainrenzhangn_x = <span class="number">400</span></span><br><span class="line">                xainrenzhangn_x2 = <span class="number">600</span></span><br><span class="line">                state=<span class="number">0</span></span><br><span class="line">            <span class="keyword">if</span> t_count == <span class="number">1</span> <span class="keyword">and</span> <span class="number">500</span> &lt;= x &lt;= <span class="number">620</span> <span class="keyword">and</span> <span class="number">180</span> &lt;= y &lt;= <span class="number">220</span>:</span><br><span class="line">                pygame.quit()</span><br><span class="line">                exit()</span><br></pre></td></tr></table></figure><p><img src="https://i.ejiaimg.cn/252/2025/02/24/67bc7c42d2359.png" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;学习pygame的第一个小游戏，挺适合做经典谷歌小恐龙跳跃&lt;/p&gt;
&lt;p&gt;仓库地址：&lt;a href=&quot;https://github.com/</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>排序算法</title>
    <link href="https://sakjijdidji55.github.io/posts/735e5788.html"/>
    <id>https://sakjijdidji55.github.io/posts/735e5788.html</id>
    <published>2025-02-26T06:39:30.000Z</published>
    <updated>2025-02-26T12:04:35.656Z</updated>
    
    <content type="html"><![CDATA[<h2 id="排序算法"><a href="#排序算法" class="headerlink" title="排序算法"></a>排序算法</h2><p>基础排序算法</p><h3 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MAOPAOSORT</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">sort</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(nums.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">maopaosort</span>(nums);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(<span class="type">int</span>&amp; a, <span class="type">int</span>&amp; b)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> temp = a;</span><br><span class="line">        a = b;</span><br><span class="line">        b = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">maopaosort</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; nums.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; nums.<span class="built_in">size</span>() - i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (nums[j] &gt; nums[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                    <span class="built_in">swap</span>(nums[j], nums[j + <span class="number">1</span>]);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>时间复杂度：O(n^2)，空间复杂度：O(1)</p><h3 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">CHOICESORT</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">sort</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(nums.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">choicesort</span>(nums);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">choiceswap</span><span class="params">(<span class="type">int</span>&amp; a, <span class="type">int</span>&amp; b)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> temp = a;</span><br><span class="line">        a = b;</span><br><span class="line">        b = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">sort</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; nums.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">            <span class="type">int</span> min = i;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; nums.<span class="built_in">size</span>(); j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (nums[j] &lt; nums[min]) &#123;</span><br><span class="line">                    min = j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">swap</span>(nums[i], nums[min]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>时间复杂度：O(n^2)，空间复杂度：O(1)</p><h3 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">INSERTSORT</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">sort</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(nums.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">insertsort</span>(nums);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">insertsort</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; nums.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">            <span class="type">int</span> temp = nums[i];</span><br><span class="line">            <span class="type">int</span> j = i - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (j &gt;= <span class="number">0</span> &amp;&amp; nums[j] &gt; temp) &#123;</span><br><span class="line">                nums[j + <span class="number">1</span>] = nums[j];</span><br><span class="line">                j--;</span><br><span class="line">            &#125;</span><br><span class="line">            nums[j + <span class="number">1</span>] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>时间复杂度：O(n^2)，空间复杂度：O(1)</p><h3 id="归并排序"><a href="#归并排序" class="headerlink" title="归并排序"></a>归并排序</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MERGESORT</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">sort</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(nums.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">mergesort</span>(nums, <span class="number">0</span>, nums.<span class="built_in">size</span>() - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">merge</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> left, <span class="type">int</span> mid, <span class="type">int</span> right)</span> </span>&#123;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">temp</span><span class="params">(right - left + <span class="number">1</span>)</span></span>;</span><br><span class="line">        <span class="type">int</span> i=left, j=mid<span class="number">+1</span>, k=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i&lt;=mid || j&lt;=right) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i &gt; mid) &#123;</span><br><span class="line">                temp[k++] = nums[j++];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (j &gt; right) &#123;</span><br><span class="line">                temp[k++] = nums[i++];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(nums[i] &lt; nums[j]) &#123;</span><br><span class="line">                    temp[k++] = nums[i++];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    temp[k++] = nums[j++];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> p = <span class="number">0</span>; p &lt; temp.<span class="built_in">size</span>(); p++) &#123;</span><br><span class="line">            nums[left + p] = temp[p];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">mergesort</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> left, <span class="type">int</span> right)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (left &gt;= right) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> mid = left + ( right - left ) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">mergesort</span>(nums, left, mid);</span><br><span class="line">        <span class="built_in">mergesort</span>(nums, mid + <span class="number">1</span>, right);</span><br><span class="line">        <span class="built_in">merge</span>(nums, left, mid, right);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>时间复杂度：O(nlogn)，空间复杂度：O(n)</p><h3 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">QUICKSORT</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">sort</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(nums.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(nums, <span class="number">0</span>, nums.<span class="built_in">size</span>() - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">quicksort</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums, <span class="type">int</span> left, <span class="type">int</span> right)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (left &gt;= right) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> i = left, j = right;</span><br><span class="line">        <span class="type">int</span> temp = nums[left];</span><br><span class="line">        <span class="keyword">while</span> (i &lt; j) &#123;</span><br><span class="line">            <span class="keyword">while</span> (i &lt; j &amp;&amp; nums[j] &gt;= temp) &#123;</span><br><span class="line">                j--;</span><br><span class="line">            &#125;</span><br><span class="line">            nums[i] = nums[j];</span><br><span class="line">            <span class="keyword">while</span> (i &lt; j &amp;&amp; nums[i] &lt;= temp) &#123;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">            nums[j] = nums[i];</span><br><span class="line">        &#125;</span><br><span class="line">        nums[i] = temp;</span><br><span class="line">        <span class="built_in">quicksort</span>(nums, left, i - <span class="number">1</span>);</span><br><span class="line">        <span class="built_in">quicksort</span>(nums, i + <span class="number">1</span>, right);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>时间复杂度：O(nlogn)，空间复杂度：O(logn)</p><h3 id="猴子排序"><a href="#猴子排序" class="headerlink" title="猴子排序"></a>猴子排序</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MONKEYSORT</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">sort</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(nums.<span class="built_in">empty</span>()) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">srand</span>(<span class="built_in">time</span>(<span class="literal">NULL</span>));</span><br><span class="line">        <span class="built_in">sort</span>(nums);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">monkeysort</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (!<span class="built_in">isSorted</span>(nums)) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; nums.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">                <span class="type">int</span> j = <span class="built_in">rand</span>() % nums.<span class="built_in">size</span>();</span><br><span class="line">                <span class="built_in">swap</span>(nums[i], nums[j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>时间复杂度：O(n!) ，空间复杂度：O(1)</p><p><strong><em>end</em></strong><br><img src="https://i.ejiaimg.cn/252/2025/02/24/67bc7c41ea329.png" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;排序算法&quot;&gt;&lt;a href=&quot;#排序算法&quot; class=&quot;headerlink&quot; title=&quot;排序算法&quot;&gt;&lt;/a&gt;排序算法&lt;/h2&gt;&lt;p&gt;基础排序算法&lt;/p&gt;
&lt;h3 id=&quot;冒泡排序&quot;&gt;&lt;a href=&quot;#冒泡排序&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>hexo一键部署脚本与优化</title>
    <link href="https://sakjijdidji55.github.io/posts/d4aa23dc.html"/>
    <id>https://sakjijdidji55.github.io/posts/d4aa23dc.html</id>
    <published>2025-02-25T04:24:02.000Z</published>
    <updated>2025-02-25T04:57:22.078Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hexo一键部署脚本与优化"><a href="#hexo一键部署脚本与优化" class="headerlink" title="hexo一键部署脚本与优化"></a>hexo一键部署脚本与优化</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>接前hexo初步搭建，本文将介绍如何使用一键部署脚本，并对其进行博客优化。</p><h2 id="butterfly主题优化"><a href="#butterfly主题优化" class="headerlink" title="butterfly主题优化"></a>butterfly主题优化</h2><h3 id="主题优化"><a href="#主题优化" class="headerlink" title="主题优化"></a>主题优化</h3><h4 id="1，下载butterfly主题"><a href="#1，下载butterfly主题" class="headerlink" title="1，下载butterfly主题"></a>1，下载butterfly主题</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><h4 id="2，修改主题配置文件"><a href="#2，修改主题配置文件" class="headerlink" title="2，修改主题配置文件"></a>2，修改主题配置文件</h4><p>在博客主文件夹创建<code>_config.butterfly.yml</code>文件，并修改主题配置文件<code>_config.yml</code>，将主题修改为butterfly。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line">theme: butterfly</span><br></pre></td></tr></table></figure></p><p>并且进入<code>node_modules</code>,找到<code>hexo-theme-butterfly</code>文件夹，将<code>_config.yml</code>文件复制到博客主文件夹的<code>_config.butterfly.yml</code>。</p><p>这个时候，你的博客应该已经成功切换到butterfly主题了。</p><p>使用hexo命令启动本地服务器，访问<code>http://localhost:4000</code>，即可预览你的博客。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo cl</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><h4 id="3，主题优化"><a href="#3，主题优化" class="headerlink" title="3，主题优化"></a>3，主题优化</h4><h5 id="3-1，设置头像"><a href="#3-1，设置头像" class="headerlink" title="3.1，设置头像"></a>3.1，设置头像</h5><p>在<code>_config.butterfly.yml</code>中，找到<code>avatar</code>，将<code>url</code>修改为你的头像链接。</p><h5 id="3-2，设置博客信息"><a href="#3-2，设置博客信息" class="headerlink" title="3.2，设置博客信息"></a>3.2，设置博客信息</h5><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">迷路的小朋友</span> <span class="comment"># 博客标题</span></span><br><span class="line"><span class="attr">subtitle:</span>  <span class="comment"># 博客副标题</span></span><br><span class="line"><span class="attr">description:</span>  <span class="comment"># 博客描述</span></span><br><span class="line"><span class="attr">keywords:</span>  <span class="comment"># 博客关键词</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">欣冻</span> <span class="comment"># 作者</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span> <span class="comment"># 语言</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span>  <span class="comment"># 时区</span></span><br></pre></td></tr></table></figure><h5 id="3-3，设置博客背景"><a href="#3-3，设置博客背景" class="headerlink" title="3.3，设置博客背景"></a>3.3，设置博客背景</h5><p>在<code>_config.butterfly.yml</code>中，找到<code>background_image</code>，将<code>url</code>修改为你的背景链接。</p><p>这样你的博客基础优化完成，更深度优化可以参考<a href="https://butterfly.js.org/posts/4a6c45f7/">官方文档</a>。<br>另外，这位大佬的<a href="https://blog.anheyu.com/posts/sdxhu.html">博客</a>有更多关于butterfly主题的优化，感谢大佬。</p><h3 id="一键部署脚本"><a href="#一键部署脚本" class="headerlink" title="一键部署脚本"></a>一键部署脚本</h3><h4 id="1，创建一键部署脚本"><a href="#1，创建一键部署脚本" class="headerlink" title="1，创建一键部署脚本"></a>1，创建一键部署脚本</h4><p>在博客主文件夹创建python脚本，名字随意（建议<code>一键部署.py</code>）：</p><h4 id="2，脚本内容"><a href="#2，脚本内容" class="headerlink" title="2，脚本内容"></a>2，脚本内容</h4><h5 id="2-1，引入库"><a href="#2-1，引入库" class="headerlink" title="2.1，引入库"></a>2.1，引入库</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br></pre></td></tr></table></figure><h5 id="2-2，定义要执行的命令"><a href="#2-2，定义要执行的命令" class="headerlink" title="2.2，定义要执行的命令"></a>2.2，定义要执行的命令</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 定义要执行的命令</span></span><br><span class="line">commands = [<span class="string">&#x27;hexo cl&#x27;</span>, <span class="string">&#x27;hexo g&#x27;</span>, <span class="string">&#x27;hexo d&#x27;</span>]</span><br></pre></td></tr></table></figure><h5 id="2-3，执行命令"><a href="#2-3，执行命令" class="headerlink" title="2.3，执行命令"></a>2.3，执行命令</h5><h6 id="2-3-1，设置PowerShell执行策略"><a href="#2-3-1，设置PowerShell执行策略" class="headerlink" title="2.3.1，设置PowerShell执行策略"></a>2.3.1，设置PowerShell执行策略</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">poewr_state=subprocess.run([<span class="string">&#x27;powershell&#x27;</span>,<span class="string">&#x27;-Command&#x27;</span>,<span class="string">&#x27;Set-ExecutionPolicy -Scope Process -ExecutionPolicy RemoteSigned&#x27;</span>], shell=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> poewr_state.returncode == <span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;PowerShell 执行策略已设置为 RemoteSigned&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;PowerShell 执行策略设置失败&#x27;</span>)</span><br></pre></td></tr></table></figure><h6 id="2-3-2，循环执行命令"><a href="#2-3-2，循环执行命令" class="headerlink" title="2.3.2，循环执行命令"></a>2.3.2，循环执行命令</h6><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 执行命令</span></span><br><span class="line"><span class="comment"># 进入博客目录</span></span><br><span class="line">os.chdir(<span class="string">&#x27;E:/BlogFloder&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> command <span class="keyword">in</span> commands:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;执行命令: <span class="subst">&#123;command&#125;</span>&#x27;</span>)</span><br><span class="line">    <span class="comment"># 执行命令</span></span><br><span class="line">    poewr_state=subprocess.run(command, shell=<span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">if</span> poewr_state.returncode == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;命令执行成功！&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;命令执行失败！&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;------------------------&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> poewr_state.returncode == <span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;部署完成！用时：<span class="subst">&#123;time.time() - start_time&#125;</span>秒&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="3，运行脚本"><a href="#3，运行脚本" class="headerlink" title="3，运行脚本"></a>3，运行脚本</h4><p>在命令行中，进入博客主文件夹，执行脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python 一键部署.py</span><br></pre></td></tr></table></figure><p>即可一键部署博客。</p><p><img src="https://i.ejiaimg.cn/252/2025/02/24/67bc7c42ecc2d.png" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;hexo一键部署脚本与优化&quot;&gt;&lt;a href=&quot;#hexo一键部署脚本与优化&quot; class=&quot;headerlink&quot; title=&quot;hexo一键部署脚本与优化&quot;&gt;&lt;/a&gt;hexo一键部署脚本与优化&lt;/h1&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; cla</summary>
      
    
    
    
    
    <category term="一键部署，butterfly" scheme="https://sakjijdidji55.github.io/tags/%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2%EF%BC%8Cbutterfly/"/>
    
  </entry>
  
  <entry>
    <title>链表的二分查找--跳表</title>
    <link href="https://sakjijdidji55.github.io/posts/c23cf668.html"/>
    <id>https://sakjijdidji55.github.io/posts/c23cf668.html</id>
    <published>2025-02-24T12:39:25.000Z</published>
    <updated>2025-02-24T13:10:13.516Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言：链表的二分查找"><a href="#前言：链表的二分查找" class="headerlink" title="前言：链表的二分查找"></a>前言：链表的二分查找</h2><p>链表与数组相比，最大的优势在于插入和删除操作的时间复杂度是O(1)，但是查找操作的时间复杂度是O(n)。如果需要频繁进行查找操作，那么链表的时间复杂度就会很高。为了解决这个问题，我们可以使用二分查找的思想来优化链表的查找操作。</p><p>这里介绍一种基于链表和二分查找思想的跳表（Skip List）数据结构。跳表是一种随机化的数据结构，它通过在链表上建立多级索引来加速查找操作。跳表的时间复杂度是O(logn)，与平衡树的时间复杂度相当，但是实现起来更简单。</p><h2 id="跳表的基本概念"><a href="#跳表的基本概念" class="headerlink" title="跳表的基本概念"></a>跳表的基本概念</h2><p>跳表是一种随机化的数据结构，它通过在链表上建立多级索引来加速查找操作。跳表的基本思想是将链表分成多个层次，每一层都是一个有序的链表。在最高层，链表中的元素是全局有序的，而在低层，链表中的元素是有序的，但是排序的范围更小。通过这种方式，我们可以快速定位到目标元素所在的区间，从而加速查找操作。</p><h2 id="跳表的实现"><a href="#跳表的实现" class="headerlink" title="跳表的实现"></a>跳表的实现</h2><h3 id="1，skipnode节点"><a href="#1，skipnode节点" class="headerlink" title="1，skipnode节点"></a>1，skipnode节点</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">SkipNode</span> &#123;</span></span><br><span class="line">    <span class="type">int</span> val;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">SkipNode</span> *<span class="title">next</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">SkipNode</span> *<span class="title">down</span>;</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="2，skipList类"><a href="#2，skipList类" class="headerlink" title="2，skipList类"></a>2，skipList类</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">SkipList</span> &#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">SkipNode</span> *<span class="title">head</span>;</span></span><br><span class="line">    <span class="type">int</span> level;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h3 id="3，创建跳表节点"><a href="#3，创建跳表节点" class="headerlink" title="3，创建跳表节点"></a>3，创建跳表节点</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> SkipNode *<span class="title function_">createSkipNode</span><span class="params">(<span class="type">int</span> val)</span> &#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">SkipNode</span> *<span class="title">node</span> =</span> (<span class="keyword">struct</span> SkipNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> SkipNode));</span><br><span class="line">    node -&gt; val = val;</span><br><span class="line">    node -&gt; next = <span class="literal">NULL</span>;</span><br><span class="line">    node -&gt; down = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> node;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4，创建跳表"><a href="#4，创建跳表" class="headerlink" title="4，创建跳表"></a>4，创建跳表</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> SkipList *<span class="title function_">createSkipList</span><span class="params">()</span> &#123;</span><br><span class="line">    srand(time(<span class="literal">NULL</span>)); <span class="comment">// 初始化随机数种子</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">SkipList</span> *<span class="title">list</span> =</span> (<span class="keyword">struct</span> SkipList *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> SkipList));</span><br><span class="line">    <span class="built_in">list</span> -&gt; head = createSkipNode(INT_MIN);</span><br><span class="line">    <span class="built_in">list</span> -&gt; level = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">list</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5，生成随机层数"><a href="#5，生成随机层数" class="headerlink" title="5，生成随机层数"></a>5，生成随机层数</h3><p>这里的MID_COUNT是一个经验值，可以根据实际情况进行调整（在一定数值时最快，一般在10到20之间最快速）。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> MAX_LEVEL = <span class="number">64</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MID_COUNT = <span class="number">2</span>; </span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">randomLevel</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> level = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (rand() % MID_COUNT == <span class="number">0</span> &amp;&amp; level &lt; MAX_LEVEL) &#123;</span><br><span class="line">        level++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> level;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6，插入节点"><a href="#6，插入节点" class="headerlink" title="6，插入节点"></a>6，插入节点</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">insertSkipList</span><span class="params">(<span class="keyword">struct</span> SkipList *<span class="built_in">list</span>, <span class="type">int</span> val)</span> &#123;</span><br><span class="line">    <span class="type">int</span> level = randomLevel();</span><br><span class="line">    <span class="keyword">if</span>( level &gt; <span class="built_in">list</span> -&gt; level) &#123;</span><br><span class="line">        <span class="keyword">for</span>(; <span class="built_in">list</span> -&gt; level &lt; level; <span class="built_in">list</span> -&gt; level++)&#123;</span><br><span class="line">            <span class="class"><span class="keyword">struct</span> <span class="title">SkipNode</span> *<span class="title">newNode</span> =</span> createSkipNode(<span class="built_in">list</span> -&gt; head -&gt; val);</span><br><span class="line">            newNode -&gt; down = <span class="built_in">list</span> -&gt; head;</span><br><span class="line">            <span class="built_in">list</span> -&gt; head = newNode;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">SkipNode</span> *<span class="title">update</span>[<span class="title">list</span> -&gt;</span> level];</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">SkipNode</span> *<span class="title">cur</span> =</span> <span class="built_in">list</span> -&gt; head;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="built_in">list</span> -&gt; level - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">while</span>(cur -&gt; next != <span class="literal">NULL</span> &amp;&amp; cur -&gt; next -&gt; val &lt; val) &#123;</span><br><span class="line">            cur = cur -&gt; next;</span><br><span class="line">        &#125;</span><br><span class="line">        update[i] = cur;</span><br><span class="line">        cur = cur -&gt; down;</span><br><span class="line">    &#125;</span><br><span class="line">    cur = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; level; i++) &#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">SkipNode</span> *<span class="title">newNode</span> =</span> createSkipNode(val);</span><br><span class="line">        newNode -&gt; next = update[i] -&gt; next;</span><br><span class="line">        update[i] -&gt; next = newNode;</span><br><span class="line">        <span class="keyword">if</span>(i &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            newNode -&gt; down = cur;</span><br><span class="line">        &#125;</span><br><span class="line">        cur = newNode;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7，查找节点"><a href="#7，查找节点" class="headerlink" title="7，查找节点"></a>7，查找节点</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">bool</span> <span class="title function_">searchSkipList</span><span class="params">(<span class="keyword">struct</span> SkipList *<span class="built_in">list</span>, <span class="type">int</span> val)</span> &#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">SkipNode</span> *<span class="title">cur</span> =</span> <span class="built_in">list</span> -&gt; head;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="built_in">list</span> -&gt; level - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">while</span>(cur -&gt; next &amp;&amp; cur -&gt; next -&gt; val &lt; val) &#123;</span><br><span class="line">            cur = cur -&gt; next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(cur -&gt; next &amp;&amp; cur -&gt; next -&gt; val == val) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cur = cur -&gt; down;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8，删除节点"><a href="#8，删除节点" class="headerlink" title="8，删除节点"></a>8，删除节点</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">deleteSkipList</span><span class="params">(<span class="keyword">struct</span> SkipList *<span class="built_in">list</span>, <span class="type">int</span> val)</span> &#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">SkipNode</span> *<span class="title">cur</span> =</span> <span class="built_in">list</span> -&gt; head;    </span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="built_in">list</span> -&gt; level - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        <span class="keyword">while</span>(cur -&gt; next &amp;&amp; cur -&gt; next -&gt; val &lt; val) &#123;</span><br><span class="line">            cur = cur -&gt; next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(cur -&gt; next &amp;&amp; cur -&gt; next -&gt; val == val) &#123;</span><br><span class="line">            <span class="class"><span class="keyword">struct</span> <span class="title">SkipNode</span> *<span class="title">temp</span> =</span> cur -&gt; next;</span><br><span class="line">            cur -&gt; next = cur -&gt; next -&gt; next;</span><br><span class="line">            <span class="built_in">free</span>(temp);</span><br><span class="line">        &#125;</span><br><span class="line">        cur = cur -&gt; down;</span><br><span class="line">    &#125;</span><br><span class="line">    cur = <span class="built_in">list</span> -&gt; head;</span><br><span class="line">    <span class="keyword">while</span>(cur -&gt; next == <span class="literal">NULL</span> &amp;&amp; <span class="built_in">list</span> -&gt; level &gt; <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">SkipNode</span> *<span class="title">temp</span> =</span> cur;</span><br><span class="line">        cur = cur -&gt; down;</span><br><span class="line">        <span class="built_in">free</span>(temp);</span><br><span class="line">        <span class="built_in">list</span> -&gt; level--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9，打印跳表"><a href="#9，打印跳表" class="headerlink" title="9，打印跳表"></a>9，打印跳表</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">printSkipList</span><span class="params">(<span class="keyword">struct</span> SkipList *<span class="built_in">list</span>)</span> &#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">SkipNode</span> *<span class="title">cur</span> =</span> <span class="built_in">list</span> -&gt; head;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="built_in">list</span> -&gt; level - <span class="number">1</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">        cur = cur -&gt; down;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(; cur -&gt; next != <span class="literal">NULL</span>; cur = cur -&gt; next) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, cur -&gt; next-&gt; val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="10，释放内存"><a href="#10，释放内存" class="headerlink" title="10，释放内存"></a>10，释放内存</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">freeSkipList</span><span class="params">(<span class="keyword">struct</span> SkipList *<span class="built_in">list</span>)</span> &#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">SkipNode</span> *<span class="title">cur</span> =</span> <span class="built_in">list</span> -&gt; head;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">SkipNode</span> *<span class="title">temp</span>;</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="built_in">list</span> -&gt; level - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        temp = cur -&gt; next;</span><br><span class="line">        <span class="keyword">for</span>(;temp; ) &#123;</span><br><span class="line">            <span class="class"><span class="keyword">struct</span> <span class="title">SkipNode</span> *<span class="title">temp2</span> =</span> temp;</span><br><span class="line">            temp = temp -&gt; next;</span><br><span class="line">            <span class="built_in">free</span>(temp2);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">SkipNode</span> *<span class="title">temp3</span> =</span> cur;</span><br><span class="line">        cur = cur -&gt; down;</span><br><span class="line">        <span class="built_in">free</span>(temp3);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">free</span>(<span class="built_in">list</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.ejiaimg.cn/252/2025/02/24/67bc4d83b1297.png" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言：链表的二分查找&quot;&gt;&lt;a href=&quot;#前言：链表的二分查找&quot; class=&quot;headerlink&quot; title=&quot;前言：链表的二分查找&quot;&gt;&lt;/a&gt;前言：链表的二分查找&lt;/h2&gt;&lt;p&gt;链表与数组相比，最大的优势在于插入和删除操作的时间复杂度是O(1)，但是查找</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>hexo初步部署日记</title>
    <link href="https://sakjijdidji55.github.io/posts/fc1c519d.html"/>
    <id>https://sakjijdidji55.github.io/posts/fc1c519d.html</id>
    <published>2025-02-23T02:24:02.000Z</published>
    <updated>2025-02-23T13:54:36.749Z</updated>
    
    <content type="html"><![CDATA[<h1 id="hexo初步部署日记"><a href="#hexo初步部署日记" class="headerlink" title="hexo初步部署日记"></a>hexo初步部署日记</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言:"></a>前言:</h2><p>hexo是一款基于node.js的静态博客框架，可以快速生成静态网页托管在github上(最重要的是不用花钱)。</p><p><a href="https://github.com/">github官网</a></p><h2 id="1-安装node-js"><a href="#1-安装node-js" class="headerlink" title="1. 安装node.js"></a>1. 安装node.js</h2><p><a href="https://nodejs.org/en/download/">下载地址</a></p><h2 id="2-安装git"><a href="#2-安装git" class="headerlink" title="2. 安装git"></a>2. 安装git</h2><p><a href="https://git-scm.com/downloads">下载地址</a></p><h2 id="3-安装hexo"><a href="#3-安装hexo" class="headerlink" title="3. 安装hexo"></a>3. 安装hexo</h2><p>这里需要管理员权限，在终端打开管理员cmd或者win+x打开管理员powershell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>如果出现报错，输入下面代码(注意这是powershell时用，不是cmd)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-ExecutionPolicy -Scope Process -ExecutionPolicy RemoteSigned</span><br></pre></td></tr></table></figure><h2 id="4-检查是否成功安装"><a href="#4-检查是否成功安装" class="headerlink" title="4. 检查是否成功安装"></a>4. 检查是否成功安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line"></span><br><span class="line">npm -v</span><br><span class="line"></span><br><span class="line">hexo -v</span><br></pre></td></tr></table></figure><p>出现版本号即成功安装</p><h2 id="5-配置用户名和链接到你的邮箱"><a href="#5-配置用户名和链接到你的邮箱" class="headerlink" title="5. 配置用户名和链接到你的邮箱"></a>5. 配置用户名和链接到你的邮箱</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;yourname&quot;</span></span><br><span class="line"></span><br><span class="line">git config --global user.email <span class="string">&quot;youremail&quot;</span></span><br></pre></td></tr></table></figure><h2 id="6-创建ssh密钥"><a href="#6-创建ssh密钥" class="headerlink" title="6. 创建ssh密钥"></a>6. 创建ssh密钥</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;youremail&quot;</span></span><br></pre></td></tr></table></figure><h2 id="7-添加ssh密钥到github"><a href="#7-添加ssh密钥到github" class="headerlink" title="7. 添加ssh密钥到github"></a>7. 添加ssh密钥到github</h2><p>打开C:\Users\用户名.ssh\id_rsa.pub文件，复制里面的内容，打开github，点击右上角头像，点击settings，点击SSH and GPG keys，点击New SSH key，title任意，将刚刚复制的内容粘贴进key，点击Add SSH key</p><p><img src="https://i.ejiaimg.cn/252/2025/02/23/67bb24660e8a9.png" alt=""></p><h2 id="8-测试是否连接成功"><a href="#8-测试是否连接成功" class="headerlink" title="8. 测试是否连接成功"></a>8. 测试是否连接成功</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>如果出现</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi yourname! You<span class="string">&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></table></figure><p>即成功连接(注意要关掉加速器)</p><h2 id="9-创建仓库"><a href="#9-创建仓库" class="headerlink" title="9. 创建仓库"></a>9. 创建仓库</h2><p><strong><em>仓库名为yourname.github.io</em></strong>，注意要勾选Initialize this repository with a README(添加一个md文件)</p><h2 id="10-配置hexo"><a href="#10-配置hexo" class="headerlink" title="10. 配置hexo"></a>10. 配置hexo</h2><p>创建一个文件夹，用于存放博客文件</p><p>打开文件夹，右键点击更多打开Git Bash Here，也可以用powershell不过需进入文件夹</p><p>如果使用powershell，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> yourpath</span><br><span class="line"></span><br><span class="line">Set-ExecutionPolicy -Scope Process -ExecutionPolicy RemoteSigned</span><br></pre></td></tr></table></figure><p>接下来二者一致</p><p><strong><em>输入</em></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx hexo init</span><br></pre></td></tr></table></figure><h2 id="11-配置-config-yml"><a href="#11-配置-config-yml" class="headerlink" title="11. 配置_config.yml"></a>11. 配置_config.yml</h2><p>打开_config.yml文件，在底部1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: https://github.com/yourname/yourname.github.io.git(你的仓库链接)</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p>注意格式</p><h2 id="12-生成静态文件"><a href="#12-生成静态文件" class="headerlink" title="12. 生成静态文件"></a>12. 生成静态文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><h2 id="13-本地预览"><a href="#13-本地预览" class="headerlink" title="13. 本地预览"></a>13. 本地预览</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>打开浏览器，输入localhost:4000，即可看到你的博客</p><h2 id="14-部署"><a href="#14-部署" class="headerlink" title="14. 部署"></a>14. 部署</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>出现</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO  Deploy <span class="keyword">done</span>: git</span><br></pre></td></tr></table></figure><p>即部署成功</p><h2 id="14-打开博客"><a href="#14-打开博客" class="headerlink" title="14. 打开博客"></a>14. 打开博客</h2><p>打开浏览器，输入yourname.github.io，即可看到你的博客(注意需要等待一段时间)</p><h2 id="15-更新博客"><a href="#15-更新博客" class="headerlink" title="15. 更新博客"></a>15. 更新博客</h2><p>在source文件夹下新建一个md文件，用markdown语法写文章</p><p>或者</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;filename&quot;</span></span><br></pre></td></tr></table></figure><p>写完后保存，打开终端，输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo cl</span><br><span class="line"></span><br><span class="line">hexo g</span><br><span class="line"></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>即更新成功</p><p>最后，若是出现报错，请不要担心，可能是网络问题，多试几次即可</p><p><img src="https://i.ejiaimg.cn/252/2025/02/23/67bb0ea6828d9.png" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;hexo初步部署日记&quot;&gt;&lt;a href=&quot;#hexo初步部署日记&quot; class=&quot;headerlink&quot; title=&quot;hexo初步部署日记&quot;&gt;&lt;/a&gt;hexo初步部署日记&lt;/h1&gt;&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerli</summary>
      
    
    
    
    
    <category term="hexo, github, blog, node.js,npm,git,部署博客,hexo部署" scheme="https://sakjijdidji55.github.io/tags/hexo-github-blog-node-js-npm-git-%E9%83%A8%E7%BD%B2%E5%8D%9A%E5%AE%A2-hexo%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>FirstPessage</title>
    <link href="https://sakjijdidji55.github.io/posts/7eff628e.html"/>
    <id>https://sakjijdidji55.github.io/posts/7eff628e.html</id>
    <published>2025-02-21T09:50:49.000Z</published>
    <updated>2025-02-24T10:38:25.437Z</updated>
    
    <content type="html"><![CDATA[<h3 id="开启博客新征程"><a href="#开启博客新征程" class="headerlink" title="开启博客新征程"></a>开启博客新征程</h3><p>​    今天，我的初创博客正式上线了。</p><p>​    这是一次发文尝试，也是标志成功搭建博客。</p><p>​    以下是平台的主要菜单选项，通过这些菜单，你可以快速进入不同的页面，开启追番之旅。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">Home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="string">追番:</span> <span class="string">/bangumis/index.html</span> <span class="string">||</span> <span class="string">fas</span> <span class="string">fa-home</span></span><br></pre></td></tr></table></figure><ol><li><p><strong>Home（首页）</strong>：链接为 <code>/</code> ，点击这个选项，你可以回到平台的首页，在这里你可以浏览到平台的最新动态、推荐内容等。图标为 <code>fas fa-home</code> ，代表着 “家” 的概念，方便你随时回到起始页面。</p></li><li><p><strong>追番</strong>：链接是 <code>/bangumis/index.html</code> ，这个页面是追番的核心区域。在这里，你可以找到各种各样的动漫作品，无论是热门新番还是经典老番，都能满足你的追番需求。同样，图标也是 <code>fas fa-home</code> ，便于你识别和点击。</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;开启博客新征程&quot;&gt;&lt;a href=&quot;#开启博客新征程&quot; class=&quot;headerlink&quot; title=&quot;开启博客新征程&quot;&gt;&lt;/a&gt;开启博客新征程&lt;/h3&gt;&lt;p&gt;​    今天，我的初创博客正式上线了。&lt;/p&gt;
&lt;p&gt;​    这是一次发文尝试，也是标志成功搭建</summary>
      
    
    
    
    
    <category term="大家好，我是迷路的小朋友" scheme="https://sakjijdidji55.github.io/tags/%E5%A4%A7%E5%AE%B6%E5%A5%BD%EF%BC%8C%E6%88%91%E6%98%AF%E8%BF%B7%E8%B7%AF%E7%9A%84%E5%B0%8F%E6%9C%8B%E5%8F%8B/"/>
    
  </entry>
  
</feed>
